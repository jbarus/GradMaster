# Backend Dockerfile
FROM eclipse-temurin:21-jdk-alpine

# Instalacja Git, narzędzi build i narzędzia netcat (potrzebne do sprawdzania dostępności usług)
RUN apk add --no-cache git maven bash netcat-openbsd

# Klonowanie repozytorium
WORKDIR /app
RUN git clone https://github.com/jbarus/GradMasterBackend.git backend
WORKDIR /app/backend

# Kopiowanie pliku .env do katalogu aplikacji (zakładamy, że plik .env znajduje się w tym samym katalogu co Dockerfile)
COPY .env /app/backend/.env

# Budowanie aplikacji
RUN mvn clean package -DskipTests

# Przeniesienie zbudowanego pliku JAR
WORKDIR /app
RUN mv backend/target/*.jar app.jar

# Dodanie skryptu wait-for-it.sh do obrazu
COPY scripts/wait-for-it.sh /wait-for-it.sh
RUN chmod +x /wait-for-it.sh

# Uruchamianie aplikacji z oczekiwaniem na RabbitMQ
CMD ["/wait-for-it.sh", "rabbitmq:5672", "--", "java", "-jar", "app.jar"]

# Otwieranie portu aplikacji
EXPOSE 8080